[{"path":"/articles/ShinyDemo.html","id":"passing-parameters-to-shiny-applications","dir":"Articles","previous_headings":"","what":"Passing parameters to Shiny applications","title":"Introduction to ShinyDemo Package","text":"application useful. However, can modify server function use ShinyDemo::get_shiny_parameters() function order find objects can passed application. shown , need list object called data_frames contains data frames application display. type_check parameter optional, called object found determine correct type. ShinyDemo::runAppWithParams essentially wrapper shiny::runApp() allows passing arbitrary parameters Shiny application. Note shiny::runApp() shiny::shinyApp() parmaeters can specified (set port example).  wish run Shiny application app.R script well package, slight modification need make. define UI server code app.R (ui.R server.R), defined global environment. place functions inside package run within package environment. Therefore anything define side functions (global.R) accessible. However, can modify environment functions run shown .","code":"df_viewer_server <- function(input, output, session) {     get_data_frames <- reactive({         get_shiny_parameter(param = 'data_frames', type_check = is.list)     })          get_data <- shiny::reactive({         shiny::req(input$dataframe)         data_frames <- get_data_frames()         df <- NULL         if(input$dataframe %in% names(data_frames)) {             df <- data_frames[[input$dataframe]]         }         return(df)     })          output$df_select <- shiny::renderUI({         data_frames <- get_data_frames()         shiny::selectInput('dataframe', 'Select Data Frame', choices = names(data_frames))     })          output$df_structure <- shiny::renderPrint({         df <- get_data()         str(df)     })          output$df_table <- DT::renderDT({         df <- get_data()         return(df)     }) } runAppWithParams(     ui = ShinyDemo::df_viewer_ui,     server = ShinyDemo::df_viewer_server,     data_frames = list(mtcars = mtcars, faithful = faithful),     port = 2112) library(shiny) library(ShinyDemo)  data(\"mtcars\") data(\"faithful\")  data_frames <- list(mtcars = mtcars,                     faithful = faithful)  ui <- ShinyDemo::df_viewer_ui environment(ui) <- environment() server <- ShinyDemo::df_viewer_server environment(server) <- environment()  shinyApp(ui = ui, server = server)"},{"path":"/articles/ShinyDemo.html","id":"utility-functions","dir":"Articles","previous_headings":"","what":"Utility Functions","title":"Introduction to ShinyDemo Package","text":"ShinyDemo utility functions.","code":""},{"path":"/articles/ShinyDemo.html","id":"ls_all","dir":"Articles","previous_headings":"Utility Functions","what":"ls_all()","title":"Introduction to ShinyDemo Package","text":"ls_all() function works like ls() returns character vector listing names objects available, however ls_all() traverse environment chain reaches .GlobalEnv.","code":""},{"path":"/articles/ShinyDemo.html","id":"renderrmd","dir":"Articles","previous_headings":"Utility Functions","what":"renderRmd","title":"Introduction to ShinyDemo Package","text":"render R markdown file Shiny application. input parameter provided available within R markdown file render time.","code":""},{"path":"/articles/ShinyDemo.html","id":"includevignette","dir":"Articles","previous_headings":"Utility Functions","what":"includeVignette","title":"Introduction to ShinyDemo Package","text":"works like includeMarkdown except include HTML vignette within Shiny app.","code":""},{"path":"/articles/ShinyDemo.html","id":"rendervignette","dir":"Articles","previous_headings":"Utility Functions","what":"renderVignette","title":"Introduction to ShinyDemo Package","text":"Similar includeVignette except source R markdown vignette rendered instead using prebuilt vignette package directory. avoids potential formatting issues includeVignette since render document partial HTML file (.e. <head><\/head> content excluded).","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jason Bryer. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bryer J (2025). ShinyDemo: Shiny Applications Parameters. R package version 1.0.0, https://jbryer.github.io/ShinyDemo/.","code":"@Manual{,   title = {ShinyDemo: Shiny Applications with Parameters},   author = {Jason Bryer},   year = {2025},   note = {R package version 1.0.0},   url = {https://jbryer.github.io/ShinyDemo/}, }"},{"path":[]},{"path":[]},{"path":"/index.html","id":"website-httpjbryergithubioshinydemo","dir":"","previous_headings":"ShinyDemo - Package for Running Shiny Apps Like Package Demos","what":"Website: http://jbryer.github.io/ShinyDemo/","title":"Shiny Applications with Parameters","text":"package designed run Shiny apps included packages inst/shiny/ directory. addition providing standardized way running apps within packages, extends typical process running Shiny apps allowing function parameters passed application. Utility functions developer provided safely check parameter values retrieve defaults application run outside package.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"ShinyDemo - Package for Running Shiny Apps Like Package Demos","what":"Installation","title":"Shiny Applications with Parameters","text":"latest version ShinyDemo package can installed using `remotes`` package. package developers, simply include Shiny apps inst/ directory within R package. ShinyDemo::shiny_demo() function automatically find apps. can also pass arbitrary parameters Shiny applications. following examples passes list data frames simple data frame viewer application.","code":"remotes::install_github('jbryer/ShinyDemo') library('ShinyDemo') ShinyDemo::shiny_demo() ##     package         app ## 1 ShinyDemo   df_viewer ## 2 ShinyDemo environment ## 3 ShinyDemo     gambler ##                                                                                      app_dir ## 1   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/ShinyDemo/df_viewer ## 2 /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/ShinyDemo/environment ## 3     /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/library/ShinyDemo/gambler library('ShinyDemo') data(\"mtcars\"); data(\"faithful\") runAppWithParams(ui = ShinyDemo::df_viewer_ui,                  server = ShinyDemo::df_viewer_server,                  data_frames = list(mtcars = mtcars, faithful = faithful),                  port = 2112)"},{"path":"/index.html","id":"development","dir":"","previous_headings":"ShinyDemo - Package for Running Shiny Apps Like Package Demos","what":"Development","title":"Shiny Applications with Parameters","text":"package uses devtools package development.","code":"# Generate the package documentation usethis::use_tidy_description() devtools::document() # Install the package devtools::install() # Run CRAN check devtools::check(cran = TRUE)"},{"path":"/reference/ShinyDemo-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny Applications with Parameters — ShinyDemo-package","title":"Shiny Applications with Parameters — ShinyDemo-package","text":"Shiny Applications Parameters","code":""},{"path":"/reference/ShinyDemo-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shiny Applications with Parameters — ShinyDemo-package","text":"package designed run Shiny apps (Chang, et al, 2021 https://shiny.rstudio.com> Wickham, 2021 isbn:9781492047384) included packages inst/shiny/ directory. addition providing standardized way running apps within packages, extends typical process running apps allowing function parameters passed application.","code":""},{"path":[]},{"path":"/reference/ShinyDemo-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Shiny Applications with Parameters — ShinyDemo-package","text":"Maintainer: Jason Bryer jason@bryer.org (ORCID)","code":""},{"path":"/reference/dfviewer.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny UI for data frame viewer application — df_viewer_ui","title":"Shiny UI for data frame viewer application — df_viewer_ui","text":"simple Shiny application demonstrate [runAppWithParams()] function. display structure contents data frames listed `data_frames` list object.","code":""},{"path":"/reference/dfviewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny UI for data frame viewer application — df_viewer_ui","text":"","code":"df_viewer_ui  df_viewer_server(input, output, session)"},{"path":"/reference/dfviewer.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Shiny UI for data frame viewer application — df_viewer_ui","text":"object class shiny.tag.list (inherits list) length 4.","code":""},{"path":"/reference/dfviewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny UI for data frame viewer application — df_viewer_ui","text":"input input object Shiny. output output object Shiny. session session object Shiny.","code":""},{"path":"/reference/dfviewer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny UI for data frame viewer application — df_viewer_ui","text":"","code":"if (interactive()) { # Only run this example in interactive R sessions data(mtcars) data(faithful) runAppWithParams(ui = ShinyDemo::df_viewer_ui,                  server = ShinyDemo::df_viewer_server,                  data_frames = list(mtcars = mtcars, faithful = faithful),                  port = 2112) }"},{"path":"/reference/includeVignette.html","id":null,"dir":"Reference","previous_headings":"","what":"Include a vignette within a Shiny app. — includeVignette","title":"Include a vignette within a Shiny app. — includeVignette","text":"read vignette (currently HTML ) included within Shiny app.","code":""},{"path":"/reference/includeVignette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Include a vignette within a Shiny app. — includeVignette","text":"","code":"includeVignette(topic, package)"},{"path":"/reference/includeVignette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Include a vignette within a Shiny app. — includeVignette","text":"topic character string giving name vignette include. package character vector names packages search , NULL packages (defined argument ) searched","code":""},{"path":"/reference/ls_all.html","id":null,"dir":"Reference","previous_headings":"","what":"List All Objects — ls_all","title":"List All Objects — ls_all","text":"function returns character vector objects available. Unlike [ls()] function loop environments current environment .GlobalEnv. also verify object indeed available current environment using [exists()] function call.","code":""},{"path":"/reference/ls_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List All Objects — ls_all","text":"","code":"ls_all()"},{"path":"/reference/ls_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List All Objects — ls_all","text":"character vector name objects available.","code":""},{"path":"/reference/renderRmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Render an RMarkdown file to be included in a Shiny app. — renderRmd","title":"Render an RMarkdown file to be included in a Shiny app. — renderRmd","text":"render R markdown file included Shiny app.","code":""},{"path":"/reference/renderRmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render an RMarkdown file to be included in a Shiny app. — renderRmd","text":"","code":"renderRmd(path, input, quiet = TRUE, envir = new.env(), ...)"},{"path":"/reference/renderRmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render an RMarkdown file to be included in a Shiny app. — renderRmd","text":"path Rmarkdown file render. input input object Shiny (optional). provided passed Rmarkdown file environment. quiet option suppress printing rendering knitr, pandoc command line others. envir environment Rmarkdown code evaluated. ... parameters passed [knitr::knit2html()]","code":""},{"path":"/reference/renderVignette.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a vignette from source to include in a Shiny app. — renderVignette","title":"Render a vignette from source to include in a Shiny app. — renderVignette","text":"render vignette (currently Rmd ) included within Shiny app.","code":""},{"path":"/reference/renderVignette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a vignette from source to include in a Shiny app. — renderVignette","text":"","code":"renderVignette(topic, package, ...)"},{"path":"/reference/renderVignette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a vignette from source to include in a Shiny app. — renderVignette","text":"topic character string giving name vignette include. package character vector names packages search , NULL ‘’ packages (defined argument ) searched ... parameters passed [ShinyDemo::renderRmd()].","code":""},{"path":"/reference/runAppWithParams.html","id":null,"dir":"Reference","previous_headings":"","what":"This is a wrapper to shiny::runApp to include parameters. — runAppWithParams","title":"This is a wrapper to shiny::runApp to include parameters. — runAppWithParams","text":"function run Shiny app pass arbitrary parameters (`NAME = VALUE`) `...` parameter application. done modifying Shiny UI server function environments. function traverse environment tree looking given parameter. Optionally, `type_check` set `.` type function (e.g. `.numeric`, `.list`, etc.) check object type. object found type match throw error.","code":""},{"path":"/reference/runAppWithParams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This is a wrapper to shiny::runApp to include parameters. — runAppWithParams","text":"","code":"runAppWithParams(ui, server, ...)  get_shiny_parameter(param, type_check)"},{"path":"/reference/runAppWithParams.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This is a wrapper to shiny::runApp to include parameters. — runAppWithParams","text":"ui Shiny ui object. server Shiny server object. ... [shiny::runApp()] parameters, [shiny::shinyApp()] parameters, parameters pass Shiny app. param parameter name. type_check `.` function (e.g. `.numeric`) test parameter type.","code":""},{"path":"/reference/runAppWithParams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This is a wrapper to shiny::runApp to include parameters. — runAppWithParams","text":"","code":"if (interactive()) { # Only run this example in interactive R sessions library(ShinyDemo) data(mtcars) data(faithful) runAppWithParams(ui = ShinyDemo::df_viewer_ui,                  server = ShinyDemo::df_viewer_server,                  data_frames = list(mtcars = mtcars, faithful = faithful),                  port = 2112) }"},{"path":"/reference/shiny_demo.html","id":null,"dir":"Reference","previous_headings":"","what":"Find and run Shiny applications from R package — shiny_demo","title":"Find and run Shiny applications from R package — shiny_demo","text":"`shiny_demo()` user-friendly interface finding running Shiny applications R packages. package developers, simply put Shiny apps thec`inst/` directory package. function find apps located loaded package.","code":""},{"path":"/reference/shiny_demo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find and run Shiny applications from R package — shiny_demo","text":"","code":"shiny_demo(   topic,   package,   lib.loc = .libPaths(),   verbose = getOption(\"verbose\"),   include.installed = FALSE,   ... )  # S3 method for class 'shinyapplist' print(x, ...)"},{"path":"/reference/shiny_demo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find and run Shiny applications from R package — shiny_demo","text":"topic topic/app run. package package contains app run. `NULL` first app given topic name run. lib.loc character vector directory names R libraries, NULL. default value NULL corresponds libraries currently known. default used, loaded packages searched libraries. verbose logical. TRUE, additional diagnostics printed. include.installed search installed packages Shiny applications. `FALSE` loaded packages searched. ... parameters passed `print()`. x results [shiny_demo()].","code":""},{"path":"/reference/shiny_demo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find and run Shiny applications from R package — shiny_demo","text":"`topic` specified return data frame listing Shiny   applications found.","code":""},{"path":"/reference/shiny_demo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find and run Shiny applications from R package — shiny_demo","text":"","code":"if(interactive()) { library(ShinyDemo) shiny_demo() # this should at least return the Shiny apps in this package shiny_demo(topic = 'df_viewer', package = 'ShinyDemo') }"},{"path":"/news/index.html","id":"shinydemo-090","dir":"Changelog","previous_headings":"","what":"ShinyDemo 0.9.0","title":"ShinyDemo 0.9.0","text":"Initial version ShinyDemo package.","code":""}]
